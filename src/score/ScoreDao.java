package score;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class ScoreDao {
    public void createTable() {
        Connection c = null;
        PreparedStatement ps = null;
        try {
            Class.forName("org.h2.Driver");
            c = DriverManager.getConnection(
                    "jdbc:h2:tcp://localhost/~/tetris", "sa", "");

            ps = c.prepareStatement(
                    "CREATE TABLE IF NOT EXISTS score (" +
                            "id INT GENERATED BY DEFAULT AS IDENTITY," +
                            "name VARCHAR(20)," +
                            "score BIGINT," +
                            "created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP," +
                            "PRIMARY KEY (id)" +
                            ");");

            ps.execute();

        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (c != null) {
                try {
                    c.close();
                    ps.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    public void addResult(Score score) {
        Connection c = null;
        PreparedStatement ps = null;
        try {
            Class.forName("org.h2.Driver");
            c = DriverManager.getConnection(
                    "jdbc:h2:tcp://localhost/~/tetris", "sa", "");

            ps = c.prepareStatement(
                    "insert into score(name, score) values(?,?)");

            ps.setString(1, score.getName());
            ps.setLong(2, score.getScore());

            ps.execute();

        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (c != null) {
                try {
                    c.close();
                    ps.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    public List<Score> getTop10() {
        Connection c = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        List<Score> scoreList = new ArrayList<>();

        try {

            Class.forName("org.h2.Driver");
            c = DriverManager.getConnection(
                    "jdbc:h2:tcp://localhost/~/tetris", "sa", "");

            ps = c.prepareStatement(
                    "select * from score ORDER BY score DESC, created_at ASC LIMIT 30");

            rs = ps.executeQuery();

            while (rs.next()) {
                Score score = new Score();
                score.setId(rs.getInt("id"));
                score.setName(rs.getString("name"));
                score.setScore(rs.getLong("score"));
                score.setCreatedAt(rs.getTimestamp("created_at"));
                scoreList.add(score);
            }


        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (c != null) {
                try {
                    rs.close();
                    ps.close();
                    c.close();
                } catch (SQLException e) {
                }
            }
            return scoreList;
        }
    }

    public void deleteAllScores() {
        Connection c = null;
        PreparedStatement ps = null;
        try {
            Class.forName("org.h2.Driver");
            c = DriverManager.getConnection(
                    "jdbc:h2:tcp://localhost/~/tetris", "sa", "");

            ps = c.prepareStatement(
                    "DELETE FROM score");

            ps.execute();

        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (c != null) {
                try {
                    c.close();
                    ps.close();
                } catch (SQLException e) {
                }
            }
        }
    }
}
